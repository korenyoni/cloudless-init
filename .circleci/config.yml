version: 2
jobs:
  test-golang:
    docker:
      - image: golang:1.9-alpine3.8
    working_directory: /go/src/github.com/yonkornilov/cloudless-init
    steps:
      - checkout
      - run: apk update 
      - run: apk add make gcc g++
      - run: make get 
      - run: make test 
  build:
    docker:
      - image: golang:1.9-alpine3.8
    working_directory: /go/src/github.com/yonkornilov/cloudless-init
    steps:
      - checkout
      - run: apk update 
      - run: apk add make gcc g++
      - run: make get 
      - run: make plugin 
      - persist_to_workspace:
          root: /go/src/github.com/yonkornilov/cloudless-init
          paths:
            - cloudless-init.so 
  test-golang-tagged:
    docker:
      - image: golang:1.9-alpine3.8
    working_directory: /go/src/github.com/yonkornilov/cloudless-init
    steps:
      - run: git checkout tags/$(CIRCLE_TAG)
      - run: apk update 
      - run: apk add make gcc g++
      - run: make get 
      - run: make test 
  build-tagged:
    docker:
      - image: golang:1.9-alpine3.8
    working_directory: /go/src/github.com/yonkornilov/cloudless-init
    steps:
      - run: git checkout tags/$(CIRCLE_TAG)
      - run: apk update 
      - run: apk add make gcc g++
      - run: make get 
      - run: make plugin 
      - persist_to_workspace:
          root: /go/src/github.com/yonkornilov/cloudless-init
          paths:
            - cloudless-init.so 
  deploy:
    docker:
      - image: tsub/ghr 
    working_directory: /
    steps:
      - attach_workspace:
          at: /cloudless-init
      - checkout:
          path: /repo
      - run: cd /repo && ghr -u $CIRCLE_USERNAME $(git describe --abbrev=0 --tags) /cloudless-init/cloudless-init.so
workflows:
  version: 2
  btd:
    jobs:
      - test-golang
      - build:
          requires:
            - test-golang
  tagged:
    jobs:
      - test-golang-tagged:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
      - build-tagged:
          requires:
            - test-golang-tagged
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
      - deploy:
          requires:
            - build-tagged
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
